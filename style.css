/* Basic Reset & Body Styling */
html {
    scroll-behavior: smooth; /* Ensure smooth scrolling for button click */
}

body {
    margin: 0;
    padding: 0;
    font-family: 'Inter', sans-serif;
    color: white; /* Default text color for the hero section */
    line-height: 1.6;
    /* Sky background on the body so it appears throughout the page */
    background-image: url('images/thesky.jpg');
    background-size: cover;
    background-position: center center;
    background-attachment: fixed; /* Keep background fixed during scroll */
    background-repeat: no-repeat;
    overflow-x: hidden; /* Prevent horizontal scrolling */
    position: relative; /* For any elements positioned relative to the body (though fixed is preferred here) */

    /* Custom Scrollbar Styling (Webkit browsers: Chrome, Safari, Edge) */
    /* Track */
    &::-webkit-scrollbar {
        width: 10px; /* Width of the scrollbar */
    }

    /* Handle (the draggable part) */
    &::-webkit-scrollbar-thumb {
        background: rgba(138, 43, 226, 0.7); /* Purple color for the scroll handle */
        border-radius: 5px; /* Rounded corners for the handle */
        border: 2px solid rgba(255, 255, 255, 0.1); /* Slight border for definition */
    }

    /* Handle on hover */
    &::-webkit-scrollbar-thumb:hover {
        background: rgba(138, 43, 226, 1); /* Darker purple on hover */
    }

    /* Track background */
    &::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.2); /* Transparent dark background for the scroll track */
    }
}


/* Hero Section (The initial full-screen view) */
.hero-screen {
    height: 100vh; /* Takes full viewport height */
    width: 100vw; /* Takes full viewport width */
    position: relative; /* For absolutely positioning the .profile-content (name) */
    box-sizing: border-box;
    /* Removed all flexbox properties from here - relying on absolute/fixed for children */
}

/* Profile text (Name only) - Centered */
.profile-content {
    position: absolute; /* Position explicitly on the page */
    top: 50%; /* Center vertically */
    left: 50%; /* Center horizontally */
    transform: translate(-50%, -50%); /* Adjust for true centering (both axes) */
    text-align: center; /* Center text within its container */
    max-width: 80vw; /* Allow text to take more width if centered */
    box-sizing: border-box;
}

.name {
    font-family: 'Roboto', sans-serif;
    font-size: 8vw; /* Default for desktop, overridden by media queries for mobile */
    font-weight: 700;
    margin: 0;
    letter-spacing: 0.1em;
    text-transform: lowercase; /* Makes "SKY" appear as "sky" */
    line-height: 1.2;
    text-shadow: 2px 2px 5px rgba(0,0,0,0.5);
    white-space: nowrap; /* Prevent line break on desktop, will adjust for mobile */
}

/* Social links container positioning - NOW FIXED TO VIEWPPORT */
.social-links-container {
    position: fixed; /* Crucial: Sticks to the viewport */
    left: 2vw; /* Desktop default */
    bottom: 50px; /* Desktop default */
    display: flex;
    flex-direction: column; /* Desktop default: vertical stack */
    gap: 20px;
    z-index: 100; /* Ensure it's on top of other content */
    padding: 10px; /* Add some padding to prevent touching screen edges */
    box-sizing: border-box;
}

.social-link {
    display: flex;
    align-items: center;
    text-decoration: none;
    color: white;
    transition: transform 0.3s ease, opacity 0.3s ease;
}

.social-link:hover {
    transform: translateX(5px); /* Desktop hover */
    opacity: 0.8;
}

.social-icon {
    width: 30px !important;
    height: 30px !important;
    filter: drop-shadow(0 0 10px rgba(100, 0, 150, 1));
}

/* About Me Button positioning - NOW FIXED TO VIEWPPORT */
.about-me-button {
    position: fixed; /* Crucial: Sticks to the viewport */
    right: 2vw; /* Desktop default */
    bottom: 50px; /* Desktop default */
    text-decoration: none;
    color: white;
    font-size: 1.1em;
    font-weight: 700;
    letter-spacing: 0.05em;
    transition: transform 0.3s ease, opacity 0.3s ease;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.5);
    z-index: 100; /* Ensure it's on top of other content */
    padding: 10px 15px; /* Button styling */
    border: 2px solid rgba(255,255,255,0.3);
    border-radius: 5px;
    background-color: rgba(0,0,0,0.2);
    box-sizing: border-box;
    white-space: nowrap; /* Prevent button text from wrapping */
}

.about-me-button:hover {
    transform: translateX(-5px); /* Desktop hover */
    opacity: 0.8;
    background-color: rgba(0,0,0,0.4);
}

/* About Me Section Styles (appears when scrolled down) */
.content-section {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 40px 20px;
    box-sizing: border-box;
    position: relative; /* For positioning spts-calc-link */
    /* Background for the About Me section - a translucent gradient to blend */
    background: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 0.4) 0%, /* Slightly transparent black */
        rgba(0, 0, 0, 0.7) 50%, /* More opaque black in the middle */
        rgba(0, 0, 0, 0.4) 100% /* Slightly transparent black */
    );
    color: rgba(255, 255, 255, 0.9); /* White-ish text color */
    text-align: center;
}

/* About Me content styling (now directly inside .content-section) */
.content-section h2,
.content-section p {
    /* Apply glow effect to About Me text */
    text-shadow: 1px 1px 5px rgba(0,0,0,0.6);
    color: inherit; /* Inherit color from .content-section (white-ish) */
    margin: 0 0 15px 0; /* Adjust margins as needed */
    max-width: 600px; /* Limit width of text for readability */
    width: 100%;
    box-sizing: border-box;
}

.content-section h2 {
    font-size: 2.5em;
    padding-bottom: 15px;
    margin-bottom: 25px;
    border-bottom: 2px solid rgba(255, 255, 255, 0.2); /* Subtle white border */
    font-weight: 700;
}

.content-section p {
    font-size: 1.2em;
    line-height: 1.6;
}

/* NEW: Styles for the Calculator Link */
.spts-calc-link {
    position: absolute; /* Positioned relative to .content-section */
    bottom: 20px; /* Distance from bottom */
    left: 20px; /* Distance from left */
    font-size: 0.9em; /* Small, but readable text */
    text-shadow: 1px 1px 3px rgba(0,0,0,0.5); /* Matching text shadow */
    white-space: nowrap; /* Prevent line break */
    z-index: 10; /* Ensure it's above other elements if needed */
}

.spts-calc-link a {
    color: rgba(255, 255, 255, 0.7); /* Slightly translucent white */
    text-decoration: none;
    transition: color 0.3s ease, text-shadow 0.3s ease;
}

.spts-calc-link a:hover {
    color: rgba(255, 255, 255, 1); /* Brighter white on hover */
    text-decoration: underline;
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.7); /* Subtle white glow on hover */
}

---
### **NEW: Pixel Transition Styles**

The following CSS creates the pixel effect. It uses CSS variables for easy adjustment of the grid size and transition.

```css
.pixel-transition-container {
    --pixel-size: 20px; /* Size of each pixel block */
    --grid-columns: 20; /* Number of columns in the pixel grid */
    --transition-duration: 0.5s; /* How long the pixel transition takes */
    --transition-delay-multiplier: 0.05s; /* Delay between each pixel's transition */

    position: relative;
    width: 100%; /* Adjust as needed, e.g., max-width: 500px; */
    max-width: 500px; /* Max width for the image container */
    aspect-ratio: 16 / 9; /* Maintain aspect ratio (e.g., 16:9) */
    overflow: hidden; /* Hide overflowing pixels */
    margin-bottom: 30px; /* Space between the image and the text */
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.7); /* Shadow around the image */
    border-radius: 8px; /* Slightly rounded corners for the container */
    background-color: #333; /* Fallback background color */
}

.pixel-transition-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover; /* Ensure image covers the container */
    display: block;
    z-index: 1; /* Ensure image is below the pixels initially */
}

.pixel-transition-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2; /* Pixels are on top */
    display: grid;
    /* Calculate grid template based on pixel size and number of columns */
    grid-template-columns: repeat(var(--grid-columns), 1fr);
    /* Set background to the same image as the actual image, but pixelated */
    background-image: url('images/thesky2.jpg');
    background-size: cover; /* Cover the grid area */
    background-position: center center;
    pointer-events: none; /* Allows hover through the pseudo-element to the actual pixels */
    opacity: 1; /* Initially visible */
    transition: opacity var(--transition-duration) ease-out; /* Fade out the pixelated layer */
}

/* This is the magic for the individual pixel blocks */
.pixel-transition-container:hover::before {
    opacity: 0; /* Hide the pixelated overlay on hover */
}

/* Create the individual pixel blocks by repeating background within the grid cells */
.pixel-transition-container::before {
    /* This creates the pixel effect */
    background-image: url('images/thesky2.jpg'); /* Same image */
    background-size: var(--pixel-size) var(--pixel-size); /* Each pixel is the background unit */
    background-repeat: repeat; /* Repeat to fill the grid */
    image-rendering: pixelated; /* Crucial for crisp pixelation */
    image-rendering: -moz-crisp-edges; /* Firefox */
    image-rendering: -webkit-crisp-edges; /* Chrome/Safari */
}

/* Add an overlay for each "pixel" that fades out */
.pixel-transition-container::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 3; /* On top of the pixelated image */
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black overlay */
    pointer-events: none;
    opacity: 1;
    transition: opacity var(--transition-duration) ease-out;
}

.pixel-transition-container:hover::after {
    opacity: 0; /* Remove the overlay on hover */
}